{"version":"1.0","ghcVersion":"ghc-9.10.0","span":{"file":"test/fixtures/found-hole-multiline/Foo.hs","start":{"line":4,"column":8},"end":{"line":4,"column":9}},"severity":"Error","code":88464,"message":["Found hole: _ :: FilePath -> IO String","In a stmt of a 'do' block: r <- _ name\nIn the expression:\n  do r <- _ name\n     return r\nIn an equation for `foo':\n    foo name\n      = do r <- _ name\n           return r","Relevant bindings include\n  name :: FilePath\n    (bound at test/fixtures/found-hole-multiline/Foo.hs:3:5)\n  foo :: FilePath -> IO String\n    (bound at test/fixtures/found-hole-multiline/Foo.hs:3:1)\nValid hole fits include\n  foo :: FilePath -> IO String\n    (bound at test/fixtures/found-hole-multiline/Foo.hs:3:1)\n  readFile :: FilePath -> IO String\n    (imported from `Prelude' at test/fixtures/found-hole-multiline/Foo.hs:1:8-10\n     (and originally defined in `ghc-internal-9.1001.0:GHC.Internal.System.IO'))\n  readIO :: forall a. Read a => String -> IO a\n    with readIO @String\n    (imported from `Prelude' at test/fixtures/found-hole-multiline/Foo.hs:1:8-10\n     (and originally defined in `ghc-internal-9.1001.0:GHC.Internal.System.IO'))\n  return :: forall (m :: Type -> Type) a. Monad m => a -> m a\n    with return @IO @FilePath\n    (imported from `Prelude' at test/fixtures/found-hole-multiline/Foo.hs:1:8-10\n     (and originally defined in `ghc-internal-9.1001.0:GHC.Internal.Base'))\n  fail :: forall (m :: Type -> Type) a. MonadFail m => String -> m a\n    with fail @IO @String\n    (imported from `Prelude' at test/fixtures/found-hole-multiline/Foo.hs:1:8-10\n     (and originally defined in `ghc-internal-9.1001.0:GHC.Internal.Control.Monad.Fail'))\n  pure :: forall (f :: Type -> Type) a. Applicative f => a -> f a\n    with pure @IO @FilePath\n    (imported from `Prelude' at test/fixtures/found-hole-multiline/Foo.hs:1:8-10\n     (and originally defined in `ghc-internal-9.1001.0:GHC.Internal.Base'))\n  (Some hole fits suppressed; use -fmax-valid-hole-fits=N or -fno-max-valid-hole-fits)"],"hints":[]}
